name: Deploy to ECR

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ECR_REPOSITORY_NAME_APP: assignment-1-app
      ECR_REPOSITORY_NAME_DB: assignment-1-db
      AWS_REGION: us-east-1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Clear AWS environment variables
        run: |
          unset AWS_ACCESS_KEY_ID
          unset AWS_SECRET_ACCESS_KEY
          unset AWS_SESSION_TOKEN

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the app Docker image
        run: |
          APP_IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY_NAME_APP }}"
          docker build -t $APP_IMAGE_URI:latest -f Dockerfile .
          docker push $APP_IMAGE_URI:latest

      - name: Build, tag, and push the MySQL Docker image
        run: |
          DB_IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY_NAME_DB }}"
          docker build -t $DB_IMAGE_URI:latest -f Dockerfile_mysql .
          docker push $DB_IMAGE_URI:latest
